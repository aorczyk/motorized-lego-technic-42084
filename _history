{"entries":[{"timestamp":1725653421178,"editorVersion":"7.0.40","changes":[{"type":"edited","filename":"main.ts","patch":[{"diffs":[[0,"vc;show;"],[-1,"sl"],[0,";')\n    "]],"start1":834,"start2":834,"length1":18,"length2":16}]}]},{"timestamp":1725654909776,"editorVersion":"7.0.40","changes":[{"type":"edited","filename":"main.ts","patch":[{"diffs":[[0,";show;sl"],[-1,","],[0,";')\n    "]],"start1":836,"start2":836,"length1":17,"length2":16}]}]},{"timestamp":1725654910589,"editorVersion":"7.0.40","changes":[{"type":"edited","filename":"main.ts","patch":[{"diffs":[[0,"'vc;init;')\n"],[1,"            bluetooth.uartWriteLine('vc;show;sl,;')\n"],[0,"            "]],"start1":785,"start2":785,"length1":24,"length2":76},{"diffs":[[0,";')\n"],[-1,"            bluetooth.uartWriteLine('vc;show;sl,sr,br;')\n"],[0,"    "]],"start1":1208,"start2":1208,"length1":65,"length2":8},{"diffs":[[0,"  strip."],[-1,"showRainbow"],[1,"clear"],[0,"()\n     "]],"start1":1955,"start2":1955,"length1":27,"length2":21},{"diffs":[[0,"60)\n"],[-1,"                myStrip.showColor(neopixel.colors(NeoPixelColors.Red))\n"],[0,"    "]],"start1":2030,"start2":2030,"length1":79,"length2":8}]}]},{"timestamp":1725655503101,"editorVersion":"7.0.40","changes":[{"type":"edited","filename":"main.ts","patch":[{"diffs":[[0,"    let "],[-1,"myS"],[1,"s"],[0,"trip = n"]],"start1":1852,"start2":1852,"length1":19,"length2":17},{"diffs":[[0,"    "],[-1,"myS"],[1,"s"],[0,"trip."],[-1,"clear"],[1,"showRainbow"],[0,"()\n "]],"start1":1958,"start2":1958,"length1":21,"length2":25},{"diffs":[[0,"    "],[-1,"    myStrip.show()\n            } else {\n                myStrip.showColor(14546394"],[1,"} else {\n                strip.showRainbow(1, 360)\n                myStrip.showColor(neopixel.colors(NeoPixelColors.Red)"],[0,")\n  "]],"start1":1990,"start2":1990,"length1":90,"length2":128}]}]},{"timestamp":1725655990684,"editorVersion":"7.0.40","changes":[{"type":"edited","filename":"main.ts","patch":[{"diffs":[[0,"lor("],[-1,"neopixel.colors(NeoPixelColors.Yellow)"],[1,"14546394"],[0,")\n  "]],"start1":2062,"start2":2062,"length1":46,"length2":16}]}]},{"timestamp":1725656546429,"editorVersion":"7.0.40","changes":[{"type":"edited","filename":"main.ts","patch":[{"diffs":[[0,"on () {\n"],[1,"    led.plot(2, 2)\n"],[0,"})\n\nblue"]],"start1":176,"start2":176,"length1":16,"length2":35}]}]},{"timestamp":1725657389330,"editorVersion":"7.0.40","changes":[{"type":"edited","filename":"main.ts","patch":[{"diffs":[[0,"1;0;0;1;"],[1,"0"],[0,";')\n    "]],"start1":832,"start2":832,"length1":16,"length2":17},{"diffs":[[0,"1;0;0;0;"],[1,"180"],[0,";')\n    "]],"start1":898,"start2":898,"length1":16,"length2":19}]}]},{"timestamp":1725866672654,"editorVersion":"7.0.42","changes":[{"type":"edited","filename":"main.ts","patch":[{"diffs":[[0,"0;100;1;"],[-1,"1"],[1,"0"],[0,";0;1;;')"]],"start1":826,"start2":826,"length1":17,"length2":17},{"diffs":[[0,";1;1"],[-1,"50;21"],[1,"10;25"],[0,"0;1;"]],"start1":886,"start2":886,"length1":13,"length2":13}]}]},{"timestamp":1728146744308,"editorVersion":"7.0.42","changes":[{"type":"edited","filename":"main.ts","patch":[{"diffs":[[0,";')\n"],[-1,"            \n"],[0,"    "]],"start1":1190,"start2":1190,"length1":21,"length2":8}]}]},{"timestamp":1728146813924,"editorVersion":"7.0.42","changes":[{"type":"edited","filename":"main.ts","patch":[{"diffs":[[0,"sl,sr,br;')\n"],[1,"            \n"],[0,"        } el"]],"start1":1182,"start2":1182,"length1":24,"length2":37}]}]},{"timestamp":1729355717882,"editorVersion":"7.0.51","changes":[{"type":"added","filename":"main.blocks","value":"<xml xmlns=\"http://www.w3.org/1999/xhtml\">\n  <block type=\"pxt-on-start\"></block>\n  <block type=\"device_forever\"></block>\n</xml>"}]}],"snapshots":[{"timestamp":1725653421177,"editorVersion":"7.0.40","text":{"main.ts":"let latestCommands: { [key: string]: number } = {}\nlet led1 = false;\nlet led2 = false;\n\nbasic.clearScreen()\n\nbluetooth.startUartService()\n\nbluetooth.onBluetoothConnected(function () {\n    led.plot(2, 2)\n})\n\nbluetooth.onUartDataReceived(serial.delimiters(Delimiters.NewLine), function () {\n    let command = bluetooth.uartReadUntil(serial.delimiters(Delimiters.NewLine))\n    let commadParts = command.split(\"=\")\n\n    latestCommands[commadParts[0]] = parseFloat(commadParts[1])\n})\n\nbasic.forever(function () {\n    while (Object.keys(latestCommands).length) {\n        let commandName = Object.keys(latestCommands)[0]\n        let commandValue = latestCommands[commandName]\n        delete latestCommands[commandName];\n\n        if (commandName == \"-v\") {\n            bluetooth.uartWriteLine('vc;init;')\n            bluetooth.uartWriteLine('vc;show;;')\n            bluetooth.uartWriteLine('vc;sl;1;-100;100;1;0;0;1;0;')\n            bluetooth.uartWriteLine('vc;sr;1;110;250;1;0;0;0;180;')\n            bluetooth.uartWriteLine('vc;ox;0;-45;45;-7;7;1;0;0;')\n            bluetooth.uartWriteLine('vc;oy;0;-45;45;-7;7;1;0;0;')\n            bluetooth.uartWriteLine('vc;il;1;')\n            bluetooth.uartWriteLine('vc;ir;1;')\n        } else if (commandName == \"oy\" || commandName == \"sl\" || commandName == \"jry\") {\n            wuKong.setMotorSpeed(wuKong.MotorList.M1, commandValue)\n        } else if (commandName == \"ox\" || commandName == \"sr\" || commandName == \"jrx\") {\n            wuKong.setServoAngle(wuKong.ServoTypeList._360, wuKong.ServoList.S0, commandValue)\n        } else if (commandName == \"1\") {\n            if (led1) {\n                wuKong.setLightMode(wuKong.LightMode.OFF)\n            } else {\n                wuKong.setLightMode(wuKong.LightMode.BREATH)\n            }\n\n            led1 = !led1\n        } else if (commandName == \"2\") {\n            let strip = neopixel.create(DigitalPin.P16, 4, NeoPixelMode.RGB)\n\n            if (led2) {\n                strip.clear()\n            } else {\n                strip.showRainbow(1, 360)\n            }\n\n            led2 = !led2\n        }\n    }\n})","README.md":"\n> Open this page at [https://aorczyk.github.io/vc---lego-tracked-vehicle/](https://aorczyk.github.io/vc---lego-tracked-vehicle/)\n\n## Use as Extension\n\nThis repository can be added as an **extension** in MakeCode.\n\n* open [https://makecode.microbit.org/](https://makecode.microbit.org/)\n* click on **New Project**\n* click on **Extensions** under the gearwheel menu\n* search for **https://github.com/aorczyk/vc---lego-tracked-vehicle** and import\n\n## Edit this project\n\nTo edit this repository in MakeCode.\n\n* open [https://makecode.microbit.org/](https://makecode.microbit.org/)\n* click on **Import** then click on **Import URL**\n* paste **https://github.com/aorczyk/vc---lego-tracked-vehicle** and click import\n\n#### Metadata (used for search, rendering)\n\n* for PXT/microbit\n<script src=\"https://makecode.com/gh-pages-embed.js\"></script><script>makeCodeRender(\"{{ site.makecode.home_url }}\", \"{{ site.github.owner_name }}/{{ site.github.repository_name }}\");</script>\n","pxt.json":"{\n    \"name\": \"Servo\",\n    \"description\": \"\",\n    \"dependencies\": {\n        \"core\": \"*\",\n        \"microphone\": \"*\",\n        \"bluetooth\": \"*\",\n        \"PF Transmitter\": \"github:aorczyk/lego-pf-transmitter#master\",\n        \"wuKong\": \"github:elecfreaks/pxt-wukong#v1.5.6\"\n    },\n    \"files\": [\n        \"main.ts\",\n        \"README.md\"\n    ],\n    \"testFiles\": [\n        \"test.ts\"\n    ],\n    \"targetVersions\": {\n        \"target\": \"6.0.25\",\n        \"targetId\": \"microbit\"\n    },\n    \"supportedTargets\": [\n        \"microbit\"\n    ],\n    \"preferredEditor\": \"tsprj\",\n    \"yotta\": {\n        \"config\": {\n            \"microbit-dal\": {\n                \"bluetooth\": {\n                    \"open\": 1,\n                    \"whitelist\": 0,\n                    \"security_level\": null\n                }\n            }\n        }\n    }\n}\n","test.ts":"// tests go here; this will not be compiled when this package is used as an extension.\n"}},{"timestamp":1725657389330,"editorVersion":"7.0.40","text":{"main.ts":"let latestCommands: { [key: string]: number } = {}\nlet led1 = false;\nlet led2 = false;\n\nbasic.clearScreen()\n\nbluetooth.startUartService()\n\nbluetooth.onBluetoothConnected(function () {\n    led.plot(2, 2)\n})\n\nbluetooth.onUartDataReceived(serial.delimiters(Delimiters.NewLine), function () {\n    let command = bluetooth.uartReadUntil(serial.delimiters(Delimiters.NewLine))\n    let commadParts = command.split(\"=\")\n\n    latestCommands[commadParts[0]] = parseFloat(commadParts[1])\n})\n\nbasic.forever(function () {\n    while (Object.keys(latestCommands).length) {\n        let commandName = Object.keys(latestCommands)[0]\n        let commandValue = latestCommands[commandName]\n        delete latestCommands[commandName];\n\n        if (commandName == \"-v\") {\n            bluetooth.uartWriteLine('vc;init;')\n            bluetooth.uartWriteLine('vc;sl;1;-100;100;1;0;0;1;0;')\n            bluetooth.uartWriteLine('vc;sr;1;110;250;1;0;0;0;180;')\n            bluetooth.uartWriteLine('vc;ox;0;-45;45;-7;7;1;0;0;')\n            bluetooth.uartWriteLine('vc;oy;0;-45;45;-7;7;1;0;0;')\n            bluetooth.uartWriteLine('vc;il;1;')\n            bluetooth.uartWriteLine('vc;ir;1;')\n            bluetooth.uartWriteLine('vc;show;sl,sr,br;')\n        } else if (commandName == \"oy\" || commandName == \"sl\" || commandName == \"jry\") {\n            wuKong.setMotorSpeed(wuKong.MotorList.M1, commandValue)\n        } else if (commandName == \"ox\" || commandName == \"sr\" || commandName == \"jrx\") {\n            wuKong.setServoAngle(wuKong.ServoTypeList._360, wuKong.ServoList.S0, commandValue)\n        } else if (commandName == \"1\") {\n            if (led1) {\n                wuKong.setLightMode(wuKong.LightMode.OFF)\n            } else {\n                wuKong.setLightMode(wuKong.LightMode.BREATH)\n            }\n\n            led1 = !led1\n        } else if (commandName == \"2\") {\n            let myStrip = neopixel.create(DigitalPin.P16, 4, NeoPixelMode.RGB)\n\n            if (led2) {\n                myStrip.clear()\n                myStrip.show()\n            } else {\n                myStrip.showColor(neopixel.colors(NeoPixelColors.Yellow))\n            }\n\n            led2 = !led2\n        }\n    }\n})","README.md":"\n> Open this page at [https://aorczyk.github.io/vc---lego-tracked-vehicle/](https://aorczyk.github.io/vc---lego-tracked-vehicle/)\n\n## Use as Extension\n\nThis repository can be added as an **extension** in MakeCode.\n\n* open [https://makecode.microbit.org/](https://makecode.microbit.org/)\n* click on **New Project**\n* click on **Extensions** under the gearwheel menu\n* search for **https://github.com/aorczyk/vc---lego-tracked-vehicle** and import\n\n## Edit this project\n\nTo edit this repository in MakeCode.\n\n* open [https://makecode.microbit.org/](https://makecode.microbit.org/)\n* click on **Import** then click on **Import URL**\n* paste **https://github.com/aorczyk/vc---lego-tracked-vehicle** and click import\n\n#### Metadata (used for search, rendering)\n\n* for PXT/microbit\n<script src=\"https://makecode.com/gh-pages-embed.js\"></script><script>makeCodeRender(\"{{ site.makecode.home_url }}\", \"{{ site.github.owner_name }}/{{ site.github.repository_name }}\");</script>\n","pxt.json":"{\n    \"name\": \"Servo\",\n    \"description\": \"\",\n    \"dependencies\": {\n        \"core\": \"*\",\n        \"microphone\": \"*\",\n        \"bluetooth\": \"*\",\n        \"PF Transmitter\": \"github:aorczyk/lego-pf-transmitter#master\",\n        \"wuKong\": \"github:elecfreaks/pxt-wukong#v1.5.6\"\n    },\n    \"files\": [\n        \"main.ts\",\n        \"README.md\"\n    ],\n    \"testFiles\": [\n        \"test.ts\"\n    ],\n    \"targetVersions\": {\n        \"target\": \"6.0.25\",\n        \"targetId\": \"microbit\"\n    },\n    \"supportedTargets\": [\n        \"microbit\"\n    ],\n    \"preferredEditor\": \"tsprj\",\n    \"yotta\": {\n        \"config\": {\n            \"microbit-dal\": {\n                \"bluetooth\": {\n                    \"open\": 1,\n                    \"whitelist\": 0,\n                    \"security_level\": null\n                }\n            }\n        }\n    }\n}\n","test.ts":"// tests go here; this will not be compiled when this package is used as an extension.\n"}},{"timestamp":1725866672654,"editorVersion":"7.0.40","text":{"main.ts":"let latestCommands: { [key: string]: number } = {}\nlet led1 = false;\nlet led2 = false;\n\nbasic.clearScreen()\n\nbluetooth.startUartService()\n\nbluetooth.onBluetoothConnected(function () {\n})\n\nbluetooth.onUartDataReceived(serial.delimiters(Delimiters.NewLine), function () {\n    let command = bluetooth.uartReadUntil(serial.delimiters(Delimiters.NewLine))\n    let commadParts = command.split(\"=\")\n\n    latestCommands[commadParts[0]] = parseFloat(commadParts[1])\n})\n\nbasic.forever(function () {\n    while (Object.keys(latestCommands).length) {\n        let commandName = Object.keys(latestCommands)[0]\n        let commandValue = latestCommands[commandName]\n        delete latestCommands[commandName];\n\n        if (commandName == \"-v\") {\n            bluetooth.uartWriteLine('vc;init;')\n            bluetooth.uartWriteLine('vc;sl;1;-100;100;1;0;0;1;0;')\n            bluetooth.uartWriteLine('vc;sr;1;110;250;1;0;0;0;180;')\n            bluetooth.uartWriteLine('vc;ox;0;-45;45;-7;7;1;0;0;')\n            bluetooth.uartWriteLine('vc;oy;0;-45;45;-7;7;1;0;0;')\n            bluetooth.uartWriteLine('vc;il;1;')\n            bluetooth.uartWriteLine('vc;ir;1;')\n            bluetooth.uartWriteLine('vc;show;sl,sr,br;')\n        } else if (commandName == \"oy\" || commandName == \"sl\" || commandName == \"jry\") {\n            wuKong.setMotorSpeed(wuKong.MotorList.M1, commandValue)\n        } else if (commandName == \"ox\" || commandName == \"sr\" || commandName == \"jrx\") {\n            wuKong.setServoAngle(wuKong.ServoTypeList._360, wuKong.ServoList.S0, commandValue)\n        } else if (commandName == \"1\") {\n            if (led1) {\n                wuKong.setLightMode(wuKong.LightMode.OFF)\n            } else {\n                wuKong.setLightMode(wuKong.LightMode.BREATH)\n            }\n\n            led1 = !led1\n        } else if (commandName == \"2\") {\n            let myStrip = neopixel.create(DigitalPin.P16, 4, NeoPixelMode.RGB)\n\n            if (led2) {\n                myStrip.clear()\n                myStrip.show()\n            } else {\n                myStrip.showColor(neopixel.colors(NeoPixelColors.Yellow))\n            }\n\n            led2 = !led2\n        }\n    }\n})","README.md":"\n> Open this page at [https://aorczyk.github.io/vc---lego-tracked-vehicle/](https://aorczyk.github.io/vc---lego-tracked-vehicle/)\n\n## Use as Extension\n\nThis repository can be added as an **extension** in MakeCode.\n\n* open [https://makecode.microbit.org/](https://makecode.microbit.org/)\n* click on **New Project**\n* click on **Extensions** under the gearwheel menu\n* search for **https://github.com/aorczyk/vc---lego-tracked-vehicle** and import\n\n## Edit this project\n\nTo edit this repository in MakeCode.\n\n* open [https://makecode.microbit.org/](https://makecode.microbit.org/)\n* click on **Import** then click on **Import URL**\n* paste **https://github.com/aorczyk/vc---lego-tracked-vehicle** and click import\n\n#### Metadata (used for search, rendering)\n\n* for PXT/microbit\n<script src=\"https://makecode.com/gh-pages-embed.js\"></script><script>makeCodeRender(\"{{ site.makecode.home_url }}\", \"{{ site.github.owner_name }}/{{ site.github.repository_name }}\");</script>\n","pxt.json":"{\n    \"name\": \"Servo\",\n    \"description\": \"\",\n    \"dependencies\": {\n        \"core\": \"*\",\n        \"microphone\": \"*\",\n        \"bluetooth\": \"*\",\n        \"PF Transmitter\": \"github:aorczyk/lego-pf-transmitter#master\",\n        \"wuKong\": \"github:elecfreaks/pxt-wukong#v1.5.6\"\n    },\n    \"files\": [\n        \"main.ts\",\n        \"README.md\"\n    ],\n    \"testFiles\": [\n        \"test.ts\"\n    ],\n    \"targetVersions\": {\n        \"target\": \"6.0.25\",\n        \"targetId\": \"microbit\"\n    },\n    \"supportedTargets\": [\n        \"microbit\"\n    ],\n    \"preferredEditor\": \"tsprj\",\n    \"yotta\": {\n        \"config\": {\n            \"microbit-dal\": {\n                \"bluetooth\": {\n                    \"open\": 1,\n                    \"whitelist\": 0,\n                    \"security_level\": null\n                }\n            }\n        }\n    }\n}\n","test.ts":"// tests go here; this will not be compiled when this package is used as an extension.\n"}},{"timestamp":1728146744308,"editorVersion":"7.0.42","text":{"main.ts":"let latestCommands: { [key: string]: number } = {}\nlet led1 = false;\nlet led2 = false;\n\nbasic.clearScreen()\n\nbluetooth.startUartService()\n\nbluetooth.onBluetoothConnected(function () {\n})\n\nbluetooth.onUartDataReceived(serial.delimiters(Delimiters.NewLine), function () {\n    let command = bluetooth.uartReadUntil(serial.delimiters(Delimiters.NewLine))\n    let commadParts = command.split(\"=\")\n\n    latestCommands[commadParts[0]] = parseFloat(commadParts[1])\n})\n\nbasic.forever(function () {\n    while (Object.keys(latestCommands).length) {\n        let commandName = Object.keys(latestCommands)[0]\n        let commandValue = latestCommands[commandName]\n        delete latestCommands[commandName];\n\n        if (commandName == \"-v\") {\n            bluetooth.uartWriteLine('vc;init;')\n            bluetooth.uartWriteLine('vc;sl;1;-100;100;1;0;0;1;;')\n            bluetooth.uartWriteLine('vc;sr;1;110;250;1;0;0;0;;')\n            bluetooth.uartWriteLine('vc;ox;0;-45;45;-7;7;1;0;0;')\n            bluetooth.uartWriteLine('vc;oy;0;-45;45;-7;7;1;0;0;')\n            bluetooth.uartWriteLine('vc;il;1;')\n            bluetooth.uartWriteLine('vc;ir;1;')\n            bluetooth.uartWriteLine('vc;show;sl,sr,br;')\n        } else if (commandName == \"oy\" || commandName == \"sl\" || commandName == \"jry\") {\n            wuKong.setMotorSpeed(wuKong.MotorList.M1, commandValue)\n        } else if (commandName == \"ox\" || commandName == \"sr\" || commandName == \"jrx\") {\n            wuKong.setServoAngle(wuKong.ServoTypeList._360, wuKong.ServoList.S0, commandValue)\n        } else if (commandName == \"1\") {\n            if (led1) {\n                wuKong.setLightMode(wuKong.LightMode.OFF)\n            } else {\n                wuKong.setLightMode(wuKong.LightMode.BREATH)\n            }\n\n            led1 = !led1\n        } else if (commandName == \"2\") {\n            let myStrip = neopixel.create(DigitalPin.P16, 4, NeoPixelMode.RGB)\n\n            if (led2) {\n                myStrip.clear()\n                myStrip.show()\n            } else {\n                myStrip.showColor(neopixel.colors(NeoPixelColors.Yellow))\n            }\n\n            led2 = !led2\n        }\n    }\n})","README.md":"\n> Open this page at [https://aorczyk.github.io/vc---lego-tracked-vehicle/](https://aorczyk.github.io/vc---lego-tracked-vehicle/)\n\n## Use as Extension\n\nThis repository can be added as an **extension** in MakeCode.\n\n* open [https://makecode.microbit.org/](https://makecode.microbit.org/)\n* click on **New Project**\n* click on **Extensions** under the gearwheel menu\n* search for **https://github.com/aorczyk/vc---lego-tracked-vehicle** and import\n\n## Edit this project\n\nTo edit this repository in MakeCode.\n\n* open [https://makecode.microbit.org/](https://makecode.microbit.org/)\n* click on **Import** then click on **Import URL**\n* paste **https://github.com/aorczyk/vc---lego-tracked-vehicle** and click import\n\n#### Metadata (used for search, rendering)\n\n* for PXT/microbit\n<script src=\"https://makecode.com/gh-pages-embed.js\"></script><script>makeCodeRender(\"{{ site.makecode.home_url }}\", \"{{ site.github.owner_name }}/{{ site.github.repository_name }}\");</script>\n","pxt.json":"{\n    \"name\": \"Servo\",\n    \"description\": \"\",\n    \"dependencies\": {\n        \"core\": \"*\",\n        \"microphone\": \"*\",\n        \"bluetooth\": \"*\",\n        \"PF Transmitter\": \"github:aorczyk/lego-pf-transmitter#master\",\n        \"wuKong\": \"github:elecfreaks/pxt-wukong#v1.5.6\"\n    },\n    \"files\": [\n        \"main.ts\",\n        \"README.md\"\n    ],\n    \"testFiles\": [\n        \"test.ts\"\n    ],\n    \"targetVersions\": {\n        \"target\": \"6.0.25\",\n        \"targetId\": \"microbit\"\n    },\n    \"supportedTargets\": [\n        \"microbit\"\n    ],\n    \"preferredEditor\": \"tsprj\",\n    \"yotta\": {\n        \"config\": {\n            \"microbit-dal\": {\n                \"bluetooth\": {\n                    \"open\": 1,\n                    \"whitelist\": 0,\n                    \"security_level\": null\n                }\n            }\n        }\n    }\n}\n","test.ts":"// tests go here; this will not be compiled when this package is used as an extension.\n"}},{"timestamp":1729355717882,"editorVersion":"7.0.51","text":{"main.ts":"let latestCommands: { [key: string]: number } = {}\nlet led1 = false;\nlet led2 = false;\n\nbasic.clearScreen()\n\nbluetooth.startUartService()\n\nbluetooth.onBluetoothConnected(function () {\n})\n\nbluetooth.onUartDataReceived(serial.delimiters(Delimiters.NewLine), function () {\n    let command = bluetooth.uartReadUntil(serial.delimiters(Delimiters.NewLine))\n    let commadParts = command.split(\"=\")\n\n    latestCommands[commadParts[0]] = parseFloat(commadParts[1])\n})\n\nbasic.forever(function () {\n    while (Object.keys(latestCommands).length) {\n        let commandName = Object.keys(latestCommands)[0]\n        let commandValue = latestCommands[commandName]\n        delete latestCommands[commandName];\n\n        if (commandName == \"-v\") {\n            bluetooth.uartWriteLine('vc;init;')\n            bluetooth.uartWriteLine('vc;sl;1;-100;100;1;1;0;1;;')\n            bluetooth.uartWriteLine('vc;sr;1;150;210;1;0;0;0;;')\n            bluetooth.uartWriteLine('vc;ox;0;-45;45;-7;7;1;0;0;')\n            bluetooth.uartWriteLine('vc;oy;0;-45;45;-7;7;1;0;0;')\n            bluetooth.uartWriteLine('vc;il;1;')\n            bluetooth.uartWriteLine('vc;ir;1;')\n            bluetooth.uartWriteLine('vc;show;sl,sr,br;')\n        } else if (commandName == \"oy\" || commandName == \"sl\" || commandName == \"jry\") {\n            wuKong.setMotorSpeed(wuKong.MotorList.M1, commandValue)\n        } else if (commandName == \"ox\" || commandName == \"sr\" || commandName == \"jrx\") {\n            wuKong.setServoAngle(wuKong.ServoTypeList._360, wuKong.ServoList.S0, commandValue)\n        } else if (commandName == \"1\") {\n            if (led1) {\n                wuKong.setLightMode(wuKong.LightMode.OFF)\n            } else {\n                wuKong.setLightMode(wuKong.LightMode.BREATH)\n            }\n\n            led1 = !led1\n        } else if (commandName == \"2\") {\n            let myStrip = neopixel.create(DigitalPin.P16, 4, NeoPixelMode.RGB)\n\n            if (led2) {\n                myStrip.clear()\n                myStrip.show()\n            } else {\n                myStrip.showColor(neopixel.colors(NeoPixelColors.Yellow))\n            }\n\n            led2 = !led2\n        }\n    }\n})","README.md":"\n> Open this page at [https://aorczyk.github.io/vc---lego-tracked-vehicle/](https://aorczyk.github.io/vc---lego-tracked-vehicle/)\n\n## Use as Extension\n\nThis repository can be added as an **extension** in MakeCode.\n\n* open [https://makecode.microbit.org/](https://makecode.microbit.org/)\n* click on **New Project**\n* click on **Extensions** under the gearwheel menu\n* search for **https://github.com/aorczyk/vc---lego-tracked-vehicle** and import\n\n## Edit this project\n\nTo edit this repository in MakeCode.\n\n* open [https://makecode.microbit.org/](https://makecode.microbit.org/)\n* click on **Import** then click on **Import URL**\n* paste **https://github.com/aorczyk/vc---lego-tracked-vehicle** and click import\n\n#### Metadata (used for search, rendering)\n\n* for PXT/microbit\n<script src=\"https://makecode.com/gh-pages-embed.js\"></script><script>makeCodeRender(\"{{ site.makecode.home_url }}\", \"{{ site.github.owner_name }}/{{ site.github.repository_name }}\");</script>\n","pxt.json":"{\n    \"name\": \"Motorized LEGO Technic 42084\",\n    \"description\": \"\",\n    \"dependencies\": {\n        \"core\": \"*\",\n        \"microphone\": \"*\",\n        \"bluetooth\": \"*\",\n        \"PF Transmitter\": \"github:aorczyk/lego-pf-transmitter#master\",\n        \"wuKong\": \"github:elecfreaks/pxt-wukong#v1.5.6\"\n    },\n    \"files\": [\n        \"main.ts\",\n        \"README.md\"\n    ],\n    \"testFiles\": [\n        \"test.ts\"\n    ],\n    \"targetVersions\": {\n        \"target\": \"6.0.25\",\n        \"targetId\": \"microbit\"\n    },\n    \"supportedTargets\": [\n        \"microbit\"\n    ],\n    \"preferredEditor\": \"tsprj\",\n    \"yotta\": {\n        \"config\": {\n            \"microbit-dal\": {\n                \"bluetooth\": {\n                    \"open\": 1,\n                    \"whitelist\": 0,\n                    \"security_level\": null\n                }\n            }\n        }\n    }\n}\n","test.ts":"// tests go here; this will not be compiled when this package is used as an extension.\n"}}],"shares":[],"lastSaveTime":1729355717891}